music_directory			"~/Music"
playlist_directory		"~/.config/mpd/playlists/"
db_file				"~/.config/mpd/database"
log_file			"~/.config/mpd/log"
pid_file			"~/.config/mpd/pid"
state_file			"~/.config/mpd/state"
sticker_file			"~/.config/mpd/sticker.sql"
bind_to_address			"127.0.0.1"
port				"6600"
#log_level			"default"
#restore_paused "no"
#save_absolute_paths_in_playlists	"no"
#metadata_to_use		"artist,album,title,track,name,genre,date,composer,performer,disc"
#auto_update			"yes"
#auto_update_depth 		"10"
#follow_outside_symlinks	"yes"
#follow_inside_symlinks		"yes"

#database {
#       plugin "proxy"
#       host "other.mpd.host"
#       port "6600"
#}

audio_output {
	type		"pulse"
	name		"My Pulse Output"
# 	server		"127.0.0.1"
#	sink		"127.0.0.1"	# optional
}

# Audio Output ################################################################
#
# MPD supports various audio output types, as well as playing through multiple
# audio outputs at the same time, through multiple audio_output settings
# blocks. Setting this block is optional, though the server will only attempt
# autodetection for one sound card.
#
# An example of an ALSA output:
#
#audio_output {
#	type		"alsa"
#	name		"My ALSA Device"
##	device		"hw:0,0"	# optional
#	mixer_type      "software"	# optional
#}

# An example of a recorder output:
#audio_output {
#	type		"recorder"
#	name		"My recorder"
#	encoder		"vorbis"		# optional, vorbis or lame
#	path		"/var/lib/mpd/recorder/mpd.ogg"
##	quality		"5.0"			# do not define if bitrate is defined
#	bitrate		"128"			# do not define if quality is defined
#	format		"44100:16:1"
#}

audio_output {
	type		"httpd"
	name		"My HTTP Stream"
	encoder		"vorbis"		# optional, vorbis or lame
	port		"8000"
	bind_to_address	"192.168.137.181"		# optional, IPv4 or IPv6
#	quality		"5.0"			# do not define if bitrate is defined
	bitrate		"128"			# do not define if quality is defined
	format		"44100:16:1"
	max_clients	"0"			# optional 0=no limit
}

# An example of a pulseaudio output (streaming to a remote pulseaudio server)

audio_output {
    type                    "fifo"
    name                    "Visualizer feed"
    path                    "/tmp/mpd.fifo"
    format                  "44100:16:2"
}

volume_normalization		"yes"
