#!/bin/bash

# to allow clangd detect all headers
cat > compile_flags.txt << EOF
-std=c$1
-Wall
-Wpedantic
-g
-I/usr/include
-I/usr/local/include
EOF

# formatting I prefer
cat > .clang-format << EOF
# Author: Abhik Jain <abhikjain360@gmail.com>
# Date: 5th January, 2021

BasedOnStyle: Google
IndentWidth: 4

AccessModifierOffset: -4
AlignConsecutiveAssignments: true
AlignOperands: true
AlignTrailingComments: true
AllowShortLambdasOnASingleLine: All
AllowShortBlocksOnASingleLine: Empty
# enable this in clang 12
#AllowShortEnumsOnASingleLine: true
AllowShortFunctionsOnASingleLine: Inline
AllowShortIfStatementsOnASingleLine: Never
BinPackArguments: false
BinPackParameters: false
ColumnLimit: 80
PointerAlignment: Left
SpaceAfterTemplateKeyword: true
SpacesBeforeTrailingComments: 1

# Custom BraceWrapping
BreakBeforeBraces: Custom
BraceWrapping:
    AfterCaseLabel: false
    AfterClass: false
    AfterControlStatement: Never
    AfterEnum: false
    AfterFunction: false
    AfterNamespace: false
    #AfterObjDeclaration: false
    AfterStruct: false
    AfterUnion: false
    AfterExternBlock: false
    BeforeCatch: false
    BeforeElse: false
    #BeforeLambdaBody: false
    #BeforeWhile: false
    IndentBraces: false
    #SplitEmptyFunctions: false
    SplitEmptyRecord: false
    SplitEmptyNamespace: false
EOF

# Makefile to use neomake to compile
cat > Makefile << EOF
# Author: Abhik Jain <abhikjain360@gmail.com>
# Date: 5th January, 2021

code: clean
	g++ code.cpp -Wall -Wpedantic -std=c++20 -O2 -o code
debug: clean
	g++ code.cpp -g -Wall -Wpedantic -std=c++20 -fsanitize=address -o code
run: code
	./code
gdb: debug
	gdb ./code
clean:
	rm -rf code
EOF

# Basic code
cat > code.c << EOF
#include <stdio>

int main() {

	return 0;
}
EOF
